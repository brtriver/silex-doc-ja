イントロダクション
==================

Silex は PHP 5.3 以上で動作する PHPマイクロフレームワークです。 Symfony2 のコンポーネントと Pimple を利用して構築されており、 sinatra からもインスパイアされています。

マイクロフレームワークを使うことでシンプルな1ファイル構成でアプリケーションを書くことができます。
Silex には次のような目的があります:

* *簡潔*: Silex は直感的であり使っていて楽しくなる簡潔なAPIが用意されています。

* *高い拡張性*: Silex は Pimple というマイクロサービスコンテナーを利用した拡張機能を備えています。
  Pimple によって簡単にサードパーティーのライブラリを利用できます。

* *テスト*: Silex は Symfony2 の リクエストとレスポンスを抽象化しているHttpKernelコンポーネントを利用しています。
  このおかげで、アプリケーションやフレームワーク自身をテストすることはとても簡単になっています。
  また、HTTPの仕様書を順守し適切な利用を促進します。

一言で言えば、コントローラーを定義しそれらをルーティングにマップする作業のすべてを、たった1ステップで行うことができるのです。

**使ってみましょう!** ::

    require_once __DIR__.'/silex.phar';

    $app = new Silex\Application();

    $app->get('/hello/{name}', function ($name) {
        return "Hello $name";
    });

    $app->run();

フレームワークを利用するために必要なことは ``silex.phar`` をインクルードするだけです。
あとは、phar(PHP アーカイブ)ファイルが処理を行ってくれます。

次に、``GET`` リクエストで ``/hello/{name}`` へのルーティングを定義します。
ルーティングに一致するリクエストの場合は関数が実行されクライアントに返却される値がreturnで返されます。

最後に、アプリケーションを実行(run)します。　本当に簡単でしょ!!

(訳者注)　ブラウザからアクセスするときは http://example.com/hello/yourname というように作成したルーティング名でアクセスしてください

Silex のインストールは Silex をダウンロードしてくるのと同じぐらい簡単です。 `silex.phar` _ ファイルをダウンロードすれば完了です!

.. _silex.phar: http://silex-project.org/get/silex.phar
